              Lexical Specification 
                       |
                Regular Expression 
                       |
                      NFA
                       |
                      DFA
                       |
       Table-driven Implemantation of DFA 
                       
                       
                      Basic Element 
Operator-----> ++><-==
White Space-----> \t\n\
Keywords------> Identifier if...else
Numbers-------> Integer 
Preposition------> Token itself ();=

Left to Right scan 
Lookahead sometimes required 

Alphabet = ACSII
Language = C Programs 

Notation 符号
  0 1 42 107-----> More Easy to learn 
  I IV X XL        even same meaning 
Syntax 语法
Semantics 语义
  5 Syntax(5 Ways)= 1 Semantic(1 Meaning) 

                     Regular Language 
Union L(A+B)
Concatenation L(AB)
Interation L(A*)

anyone@cs.stanford.edu
letter++ '@' letter++ '.' letter++ '.' letter++

                    Algorithms(5 Steps)
1.Write a prefix of Input 
2.R = R1 + R2 + R3 
      Keywords + Identifier + Number 
3.Check if it is a Regular Expression 
4.If it is a Regular Expression put it to j
5.If it is not a Regular Expression go back to 3.

ERROR = [all strings not in the Lexical Specification] 

                   **Finite Automaton** 
States 
Start State 
Final Sate 

State   Input 
  A       1  
         | 
  B       1
           | ---->Accept 
           
           
